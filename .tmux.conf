# default shell
set-option -g default-command "/opt/homebrew/bin/bash -il"
#set -g default-terminal "tmux-256color"
# Need this for 24bit truecolor support
#set -ga terminal-overrides ',*256col*:Tc,*256col*:RGB'

# new prefix
unbind C-b
set -g prefix C-Space

# quick back is <Prefix><Prefix>
unbind C-Space
bind C-Space last-window

# vi-style keybindings
setw -g mode-keys vi
unbind Escape
bind Escape copy-mode

# afaict, there isn't a sane way to fully integrate an external clipboard manager into tmux
# as such, the hacky workaround is as follows:
# <prefix>P - copy the system clipboard into a paste buffer, then select from paste buffers
# <prefix>C - copy the most recent paste buffer into the system clipboard
# <copy-mode>y - save the selection into a paste buffer AND copy the selection into the system
# clipboard
unbind p
bind-key p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard >/dev/null"
unbind P
unbind C
bind-key P run 'tmux set-buffer "$(xclip -out -selection clipboard)"; tmux choose-buffer'
bind-key C run 'tmux show-buffer | xclip -in -selection clipboard >/dev/null'

# Make new-window/split-window use the current directory
unbind c
bind-key c new-window -c "#{pane_current_path}"
unbind %
bind-key % split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key '"' split-window -v -c "#{pane_current_path}"

# shortcut to kill a pane without being pestered
unbind X
bind-key X kill-pane

# synchronize panes on Scroll Lock; anything you type will go to all panes
unbind *
bind-key * set-window-option synchronize-pane

# if we use a ton of scrollback, you might need to clear the scrollback buffer via `C-Space R`
set -g history-limit 99999999
unbind R
bind-key R clear-history

# provide a reverse
unbind M-n
bind M-n previous-window

# pane resizing
unbind C-h
unbind C-l
unbind C-j
unbind C-k
unbind =
bind-key -r C-h resize-pane -L
bind-key -r C-l resize-pane -R
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key =   select-layout -E

# improved navigation
set -s escape-time 0
unbind [
unbind ]
bind [ previous-window
bind ] next-window
# <Prefix>h selects the left pane and so on
unbind h
unbind l
unbind j
unbind k
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U

# Make 'q' timeout after 15s
set -g display-panes-time 15000

# by default, 0-9 select windows instead of panes
# I don't find this useful, so select panes instead
unbind 0
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
bind-key 0 select-pane -t:.0
bind-key 1 select-pane -t:.1
bind-key 2 select-pane -t:.2
bind-key 3 select-pane -t:.3
bind-key 4 select-pane -t:.4
bind-key 5 select-pane -t:.5
bind-key 6 select-pane -t:.6
bind-key 7 select-pane -t:.7
bind-key 8 select-pane -t:.8
bind-key 9 select-pane -t:.9

# make F10,F1-9 select windows since 0-9 select panes
unbind F10
unbind F1
unbind F2
unbind F3
unbind F4
unbind F5
unbind F6
unbind F7
unbind F8
unbind F9
bind-key F10 select-window -t 0
bind-key F1 select-window -t 1
bind-key F2 select-window -t 2
bind-key F3 select-window -t 3
bind-key F4 select-window -t 4
bind-key F5 select-window -t 5
bind-key F6 select-window -t 6
bind-key F7 select-window -t 7
bind-key F8 select-window -t 8
bind-key F9 select-window -t 9

# make clock-mode use 24-hour clocks
set -g clock-mode-style 24

# rebind s to fully-expanded choose-tree; folded is bound to S
unbind s
bind s choose-tree -Z
unbind S
bind S choose-tree -Zs

# renumber windows when a window is moved/closed
set-option -g renumber-windows on

# THEME
# Note: status-format[0] is the top-most line
set -g status-bg white
set -g status-fg black

set -g status 2
set -g status-interval 60
set -g window-status-format "#{?window_index,F#{window_index},F10}:#{window_name}[#{window_panes}]#{?window_flags,#{window_flags}, }"
set -g window-status-current-format "#{?window_index,F#{window_index},F10}:#{window_name}[#{window_panes}]#{?window_flags,#{window_flags}, }"
set -g status-format[0] '#{W:#{E:window-status-format} ,#{E:window-status-current-format} } #[align=right]#[fg=blue]#(tmux show -g prefix | cut -d" " -f 2)#[default]'
set -g status-format[1] '#[bg=white][#S] #(whoami)@#h #[default] #[align=right] #[bg=white]%H:%M %A %Y-%m-%d#[default]'

# toggle audio
## use pactl list to determine which index to use on a specific machine
unbind m
bind-key m run 'pactl set-sink-mute 1 toggle'

# enable mouse support
#set -g mouse on
# needed to work over ssh from MacOS Terminal.app
#set -g alternate-screen on

# todo toggle mouse
#bind-key M run 'tmux set mouse off'
